// <auto-generated />
using System;
using AnimalShelter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalShelter.Migrations
{
    [DbContext(typeof(AnimalShelterContext))]
    [Migration("20210404193157_OneToMany")]
    partial class OneToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AnimalShelter.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Admitted")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            AnimalId = 1,
                            Admitted = new DateTime(2021, 4, 4, 12, 31, 57, 346, DateTimeKind.Local).AddTicks(1230),
                            Age = 3,
                            Gender = "Male",
                            Name = "Attila",
                            SpeciesId = 1
                        },
                        new
                        {
                            AnimalId = 2,
                            Admitted = new DateTime(2021, 4, 4, 12, 31, 57, 346, DateTimeKind.Local).AddTicks(1960),
                            Age = 10,
                            Gender = "Male",
                            Name = "RZA",
                            SpeciesId = 1
                        },
                        new
                        {
                            AnimalId = 3,
                            Admitted = new DateTime(2021, 4, 4, 12, 31, 57, 346, DateTimeKind.Local).AddTicks(1970),
                            Age = 1,
                            Gender = "Female",
                            Name = "Maple",
                            SpeciesId = 2
                        },
                        new
                        {
                            AnimalId = 4,
                            Admitted = new DateTime(2021, 4, 4, 12, 31, 57, 346, DateTimeKind.Local).AddTicks(1970),
                            Age = 2,
                            Gender = "Female",
                            Name = "Beatrix",
                            SpeciesId = 2
                        },
                        new
                        {
                            AnimalId = 5,
                            Admitted = new DateTime(2021, 4, 4, 12, 31, 57, 346, DateTimeKind.Local).AddTicks(1970),
                            Age = 12,
                            Gender = "Female",
                            Name = "Petunia",
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SpeciesId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            SpeciesId = 1,
                            Type = "Cat"
                        },
                        new
                        {
                            SpeciesId = 2,
                            Type = "Chicken"
                        },
                        new
                        {
                            SpeciesId = 3,
                            Type = "Donkey"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Animal", b =>
                {
                    b.HasOne("AnimalShelter.Models.Species", null)
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimalShelter.Models.Species", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
